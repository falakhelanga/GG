import Button from "@/components/elements/ui/Button";
import ContentWrap from "@/components/elements/ui/ContentWrap";
import Heading from "@/components/elements/ui/Heading";
import { ScrollToTop } from "@/components/elements/ui/ScrollToTop";
import DropDown from "@/components/sections/CompetitionPlatformPage.tsx/gallery/GallerySortDropDown";
import SearchInput from "@/components/sections/CompetitionPlatformPage.tsx/gallery/SearchInput";
import FreeToJustBeHubHero from "@/components/sections/FreeToJustBeHub/FreeToJustBeHubHero";
import ArticleCard from "@/components/sections/homepage/articles/ArticleCard";
import { useSubCategories } from "@/context/subCategories";
import { fetchAPI } from "@/lib/api";
import { ProductType, SubCategoryType } from "@/types/products";
import { GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import React, { useEffect, useState } from "react";

const articles = [
  {
    id: 1,
    image: "/images/blog_img_1.png",
    title: `the are 2 v's that matter the article`,
    body: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Autem
  vero eaque doloribus, ea, eius quas consectetur hic quidem unde
  sapiente molestias officia temporibus. Alias distinctio ducimus,
  odio exercitationem perferendis hic?`,
  },
  {
    id: 2,
    image: "/images/blog_img_2.png",
    title: `the are 2 v's that matter the article`,
    body: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Autem
  vero eaque doloribus, ea, eius quas consectetur hic quidem unde
  sapiente molestias officia temporibus. Alias distinctio ducimus,
  odio exercitationem perferendis hic?`,
  },
  {
    id: 3,
    image: "/images/blog_img_3.png",
    title: `the are 2 v's that matter the article`,
    body: `Lorem ipsum dolor, sit amet consectetur adipisicing elit. Autem
  vero eaque doloribus, ea, eius quas consectetur hic quidem unde
  sapiente molestias officia temporibus. Alias distinctio ducimus,
  odio exercitationem perferendis hic?`,
  },
];
const categoriesOptions = ["select", "comfort", "control", "intimate"];
const sortingOptions = ["newest", "oldest"];

const FreeToBeHub = ({
  subcategories,
  newProducts,
  articles,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const { setSubCategories, setNewProducts } = useSubCategories();
  // console.log(articlesProp, "articles");
  const [searchValue, setSearchValue] = useState("");
  const [sortValue, setSortValue] = useState<string | null>(sortingOptions[0]);
  const [sortCategoriesValue, setSortCategoriesValue] = useState<string | null>(
    categoriesOptions[0]
  );
  useEffect(() => {
    setNewProducts(newProducts);
    setSubCategories(subcategories);
  }, [setSubCategories, subcategories, setNewProducts, newProducts]);

  const handleSearch = () => {};
  return (
    <>
      <Head>
        <title>Free to just be hub</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="pb-14 bg-[#F1ECEE]">
        <div className="">
          <FreeToJustBeHubHero />
        </div>
        <ContentWrap>
          <Heading className="uppercase my-14">
            your <span className="font-bold">hub</span> for all things woman
          </Heading>

          <div className="text-center text-xl md:mx-[8rem] mb-12">
            Browse through the wealth of info on everything to do with feminine
            hygiene, womanhood and fighting the{" "}
            <span className="font-bold">freedom to</span>{" "}
            <span className="font-paul text-4xl">just be</span>
          </div>
          <div className="md:grid flex flex-col  md:grid-cols-3 md:mt-10 md:gap-7 gap-1">
            <SearchInput
              searchValue={searchValue}
              setSearchValue={setSearchValue}
              handleSearch={handleSearch}
            />

            <div>
              <DropDown
                options={categoriesOptions}
                name="Categories"
                sortValue={sortCategoriesValue}
                setSortValue={setSortCategoriesValue}
              />
            </div>
            <div>
              <DropDown
                options={sortingOptions}
                name="Sort articles by"
                sortValue={sortValue}
                setSortValue={setSortValue}
              />
            </div>
          </div>
          <div className="md:grid flex flex-col  md:grid-cols-3 mt-10 gap-7">
            {articles.map((article) => (
              <ArticleCard {...article} key={article.id} />
            ))}
          </div>
          <div className="flex md:justify-center mt-14 relative mb-1 max-sm:gap-4 ">
            <div className="max-sm:flex-1">
              <Button
                onClick={() => {
                  // paginate();
                }}
                variant="outline"
                className="md:px-16 max-sm:w-full"
              >
                LOAD MORE
              </Button>
            </div>

            <div className="md:absolute md:right-0">
              <ScrollToTop />
            </div>
          </div>
        </ContentWrap>
      </div>
    </>
  );
};

export default FreeToBeHub;

export const getStaticProps: GetStaticProps<{
  subcategories: SubCategoryType[];
  newProducts: ProductType[];
  articles: {
    id: number;
    image: string;
    title: string;
    body: string;
  }[];
}> = async (ctx) => {
  const { data: subcategories } = await fetchAPI("subcategories", ["products"]);
  const { data: articles } = await fetchAPI("arcticles", ["image"]);
  const productPopulate = ["products.products.image", "products.products"];
  const { data: productsData } = await fetchAPI(
    "products-range",
    productPopulate
  );
  const products: ProductType[] =
    productsData.attributes.products.products.data.map((product: any) => ({
      ...product.attributes,
      id: product.id,
    }));
  const newProducts = products.filter((product) => product.isNew);
  return {
    props: {
      articles: articles
        .map((article: any) => ({
          ...article.attributes,
          id: article.id,
        }))
        .map((article: any) => ({
          ...article,
          image: article.image.data.attributes.url,
          body: article.intro_text,
        })),
      newProducts,
      subcategories: subcategories.map((subcategory: any) => ({
        ...subcategory.attributes,
        id: subcategory.id,
      })),
    },
  };
};
