import Button from "@/components/elements/Button";
import GynaguardPromise from "@/components/elements/GynaguardPromise/GynaguardPromise";
import Title from "@/components/elements/Title";
import ContentWrap from "@/components/elements/layout/ContentWrap";
import BuyNowDropDown from "@/components/sections/homepage/products/BuyNowDropDown";
import Reviews from "@/components/sections/products-range/Reviews";
import { fetchAPI } from "@/lib/api";
import { CategoryType, ProductType } from "@/types/products";
import { faChevronRight } from "@fortawesome/pro-solid-svg-icons";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { GetStaticProps, InferGetStaticPropsType } from "next";
import Head from "next/head";
import Image from "next/image";
import React from "react";
import ReactMarkdown from "react-markdown";
import { default as _ReactPlayer } from "react-player/youtube";
import { ReactPlayerProps } from "react-player/types/lib";
import Link from "next/link";
const ReactPlayer = _ReactPlayer as unknown as React.FC<ReactPlayerProps>;
const IndividualProduct = ({
  product,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const reviews = product.reviews.data.map((review: any) => ({
    ...review.attributes,
    id: review.id,
  }));

  return (
    <>
      <Head>
        <title>{product.name}</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div>
        <ContentWrap className="mt-[7rem]">
          <div className="uppercase flex items-center gap-2 text-sm text-black">
            <Link className="hover:text-pink" href="/products-range">
              products
            </Link>
            <FontAwesomeIcon
              icon={faChevronRight}
              className="text-pink text-xs"
            />
            <Link
              className="hover:text-pink"
              href={`/products-range?page=${product.category.data.attributes.name}`}
            >
              {product.category.data.attributes.name}
            </Link>
            <FontAwesomeIcon
              icon={faChevronRight}
              className="text-pink text-xs"
            />
            <span className="font-bold">{product.name}</span>
          </div>

          <div className="grid grid-cols-2 mt-12 gap-4">
            <div className="h-full w-full">
              <Image
                className="h-full w-full"
                alt=""
                height={1000}
                width={1000}
                src={`${product.image.data.attributes.url}`}
              />
            </div>
            <div className="h-full w-full ">
              <div className="text-pink uppercase font-normal text-4xl">
                Gynaguard
              </div>
              <ReactMarkdown className="text-green text-5xl font-semibold mt-3 prose">
                {product.name}
              </ReactMarkdown>
              <ReactMarkdown className=" my-6 font-bold text-black prose">
                {product.quantities}
              </ReactMarkdown>
              <ReactMarkdown className="   text-black prose">
                {product.description}
              </ReactMarkdown>
              <ReactMarkdown className="   text-black my-6 prose">
                {product.subContent}
              </ReactMarkdown>
              <ReactMarkdown className="   text-black mb-6 prose -ml-3">
                {product.subContentBullets}
              </ReactMarkdown>
              <div className="w-[50%] relative">
                <BuyNowDropDown />
              </div>
            </div>
          </div>
          <div className="my-[5rem] ">
            <Reviews reviews={reviews} />
          </div>
        </ContentWrap>
        <div className="  w-full flex-1 flex flex-col items-center justify-center bg-[#f2f1f0] object-cover h-[65vh] relative mt-[8rem]">
          <ReactPlayer
            className="react-player aspect-video -mt-[5rem]"
            height={"100%"}
            width={"50%"}
            url={"https://youtu.be/YkLm5cUR0aM"}
            controls
          />
          <div className="w-full text-center text-green font-bold text-lg my-8">
            {product.name}
          </div>
        </div>
        <div>
          <GynaguardPromise />
        </div>
      </div>
    </>
  );
};

export default IndividualProduct;

export async function getStaticPaths() {
  const { data } = await fetchAPI("products");

  const products: ProductType[] = data.map((product: any) => ({
    ...product.attributes,
    id: product.id,
  }));
  const paths = products.map((product) => ({
    params: { product_id: product.id.toString() },
  }));
  return {
    paths: paths,
    fallback: false, // can also be true or 'blocking'
  };
}

export const getStaticProps: GetStaticProps<{ product: ProductType }> = async (
  ctx
) => {
  const pagePopulate = ["image", "reviews", "category"];
  const productId = ctx?.params?.product_id;
  const { data } = await fetchAPI(`products/${productId}`, pagePopulate);
  const product = data.attributes;
  return {
    props: {
      product,
    },
  };
};
